// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pomodoro.API.DATA;

#nullable disable

namespace Pomodoro.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241113010803_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pomodoro.Shared.Entities.HistorialSesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int?>("SesionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("SesionId");

                    b.ToTable("HistorialSesiones");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.Recompensa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.HasIndex("ProyectoId");

                    b.ToTable("Recompensas");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.SesionPomodoro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int?>("TareaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("TareaId");

                    b.ToTable("SesionesPomodoro");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaLimite")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.TecnicaEstudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beneficios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TecnicasEstudio");
                });

            modelBuilder.Entity("SesionPomodoroTecnicaEstudio", b =>
                {
                    b.Property<int>("SesionesPomodoroId")
                        .HasColumnType("int");

                    b.Property<int>("TecnicasEstudioId")
                        .HasColumnType("int");

                    b.HasKey("SesionesPomodoroId", "TecnicasEstudioId");

                    b.HasIndex("TecnicasEstudioId");

                    b.ToTable("SesionPomodoroTecnicaEstudio");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.HistorialSesion", b =>
                {
                    b.HasOne("Pomodoro.Shared.Entities.Proyecto", "Proyecto")
                        .WithMany("HistorialSesiones")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pomodoro.Shared.Entities.SesionPomodoro", "SesionPomodoro")
                        .WithMany()
                        .HasForeignKey("SesionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Proyecto");

                    b.Navigation("SesionPomodoro");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.Recompensa", b =>
                {
                    b.HasOne("Pomodoro.Shared.Entities.Proyecto", "Proyecto")
                        .WithMany("Recompensas")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.SesionPomodoro", b =>
                {
                    b.HasOne("Pomodoro.Shared.Entities.Proyecto", "Proyecto")
                        .WithMany("SesionesPomodoro")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pomodoro.Shared.Entities.Tarea", "Tarea")
                        .WithMany("SesionesPomodoro")
                        .HasForeignKey("TareaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Proyecto");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.Tarea", b =>
                {
                    b.HasOne("Pomodoro.Shared.Entities.Proyecto", "Proyecto")
                        .WithMany("Tareas")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("SesionPomodoroTecnicaEstudio", b =>
                {
                    b.HasOne("Pomodoro.Shared.Entities.SesionPomodoro", null)
                        .WithMany()
                        .HasForeignKey("SesionesPomodoroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomodoro.Shared.Entities.TecnicaEstudio", null)
                        .WithMany()
                        .HasForeignKey("TecnicasEstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.Proyecto", b =>
                {
                    b.Navigation("HistorialSesiones");

                    b.Navigation("Recompensas");

                    b.Navigation("SesionesPomodoro");

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("Pomodoro.Shared.Entities.Tarea", b =>
                {
                    b.Navigation("SesionesPomodoro");
                });
#pragma warning restore 612, 618
        }
    }
}
