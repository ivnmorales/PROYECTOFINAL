@page "/Login"
@*Importaciones necesarias para DTOs, servicios de autenticación y utilidades.*@
@using Pomodoro.Shared.Dtos;
@using Pomodoro.WEB.AuthenticationProviders;
@using Pomodoro.WEB.Services;
@*Inyecciones de dependencias necesarias para el componente*@
@inject IRepository repository  // Servicio para interactuar con la API.
@inject SweetAlertService sweetAlertService // Servicio para mostrar alertas.
@inject NavigationManager navigationManager // Servicio para navegar entre páginas.
@inject ILoginService loginService // Servicio de manejo de autenticación.

@*Título de la página.*@
<h3 class="text-center text-primary">Iniciar Sesión</h3>

<EditForm Model="loginDTO" OnValidSubmit="LoginAsync">
    <DataAnnotationsValidator />

    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow-lg border-0 rounded-4" style="background-color: #fff1f1;">
                <div class="card-header text-center" style="background-color: #f44336; color: white; border-bottom: 2px solid #e0e0e0;">
                    <span>
                        <i class="oi oi-account-login" style="font-size: 24px;"></i>
                        <strong>Iniciar Sesión</strong>
                    </span>
                </div>

                <div class="card-body">
                    <div class="mb-3">
                        <label>Email:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="@loginDTO.Email" placeholder="Ingrese su correo" style="border-color: #f44336;" />
                            <ValidationMessage For="@(() => loginDTO.Email)" />
                        </div>
                    </div>

                    <div class="mb-3">
                        <label>Contraseña:</label>
                        <div>
                            <InputText type="password" class="form-control" @bind-Value="@loginDTO.Password" placeholder="Ingrese su contraseña" style="border-color: #f44336;" />
                            <ValidationMessage For="@(() => loginDTO.Password)" />
                        </div>
                    </div>
                </div>

                <div class="card-footer text-center">
                    <button class="btn btn-danger w-100" type="submit" style="background-color: #e57373; border-color: #f44336;">
                        Iniciar Sesión
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private LoginDTO loginDTO = new(); // Inicializa el modelo para el formulario.

    private async Task LoginAsync()
    {
        // Llama a la API para intentar iniciar sesión con las credenciales proporcionadas.
        var responseHttp = await repository.Post<LoginDTO, TokenDTO>("/api/accounts/Login", loginDTO);

        if (responseHttp.Error) // Manejo de error si la API responde con un problema.
        {
            var message = await responseHttp.GetErrorMessage(); // Obtiene el mensaje de error.
            await sweetAlertService.FireAsync("Error", message ?? "Error al iniciar sesión", SweetAlertIcon.Error); // Muestra un mensaje de error.
            return;
            return;
        }
        // Si la autenticación es exitosa, guarda el token de usuario y navega al dashboard.
        await loginService.LoginAsync(responseHttp.Response!.Token);
        navigationManager.NavigateTo("/dashboard");
    }
}
